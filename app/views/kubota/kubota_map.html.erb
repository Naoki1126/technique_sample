<style>
    body{
        font-family: 'sans-serif';
    }
    #map{
        height: 100%;
        width: 100%;
        margin: 0 auto;
        border-radius: 10px;
        
        }

    h1{
        text-align: center;
        background-color: #ffe1bc00;
        border: 1px solid black;
        width: 60%;
        margin: 0 auto;
    }

    body{
        width: auto;
        height: 100%;
        background: linear-gradient(180deg, black, #ffc933b0);
        /* background-color: #e6ffff; */
    }

    #address{
        height: 4vh;
        width: 35vw;
        border-radius: 14px;
        text-decoration:none;
        outline: none;
        font-size: 20px;
        padding-left: 1%;
    }

    #map_input_container{
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 20px 0;
    }

    #map_submit{
        background-color: white;
        border: 2px solid black;
        padding: 4px 10px;
        margin: 20px;
        font-weight: bold;
        transition: all 1500ms;
        font-size: 20px;
        font-family: 'sans-serif';
        border: none;

    }

    #map_submit:hover{
        background-color: blue;
        color: white;
    }

    .search_input{
        border: 1px solid gray;
        box-shadow: 1px 1px 7px gray;
    }

    #marriage_target{
        width: 200px;
        background-image: url("/assets/kubota_logo1.png");
        background-repeat: no-repeat;
        background-size: 200px 200px;
        background-position: center;
        height: 150px;
        margin: 0 auto;
    }

    @keyframes fadeIn{
        0%{
            opacity: 0;
            transform: scale(3);
        }
        100%{
            opacity: 1;
            transform: scale(1);
        }
    }

    #kaiseki{
        text-align: center;
        color: white;
        font-weight: bold;
        opacity: 0;
    }

    #kaiseki_wrapper{
        height:30px;
    }
</style>

<p style="cursor: pointer" id="marriage_target"></p>

<%= form_with url: map_request_path, method: :get,remote: true do |m| %>
    <div id = "map_input_container">
        <%= m.text_field :address,placeholder: 'Search',class: 'search_input' %>
        <%#= m.submit 'Learn About RYO',id: 'map_submit' %>
        <input type="submit" name="commit" value="input" id="map_submit" style="display: none;">
    </div>
<% end %>
<div id="kaiseki_wrapper">
    <p id="kaiseki">解析中・・・</p>
</div>
<div id="map" style="opacity: 0;"></div>

<script>
    let mapInstance = []
    let markerDatas;
    let markers;
    let marker = [];
    console.log(markerDatas);

    function initMap(){
        mapInstance = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 36.6233354, lng: 138.1622222},
            zoom: 7,
            // mapTypeId: google.maps.MapTypeId.SATELLITE
            mapTypeId: google.maps.MapTypeId.HYBRID
        });

        mapInstance.addListener('click', function(e) {
            getClickLatLng(e.latLng, mapInstance);
        });
    }

    function getClickLatLng(lat_lng, mapInstance) {
        console.log(lat_lng.lat());
        console.log(lat_lng.lng());
        mapInstance.panTo(lat_lng);
    }
    window.addEventListener('load', function() {
        let map = document.getElementById('map');
        map.style.width = `${window.innerWidth * 0.9}` + `px`;
        map.style.height = `${window.innerHeight * 0.7}` + `px`;
    });
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_KEY'] %>&callback=initMap" async defer></script>

<script>;
var count = 0

document.getElementById("map_submit").onclick = function(){
    document.getElementById("map").style.animation = ""
    kaisekiAnimation()
    var kaisekiAnimationTimer = setInterval(function(){
        
        count++
        if (count > 1){
            clearInterval(kaisekiAnimationTimer);
        }
        kaisekiAnimation();
    },1800);
    let marker = []
    let pos = []
    let infoWindow = []
    let request = new XMLHttpRequest();
    request.addEventListener('load', function(event){ // ロードさせ実行
        const response = event.target.responseText; // 受け取ったテキストを返す
        let response_value = JSON.parse(response)
        for( let i = 0; i < response_value["data"].length; i++){
            pos[i] = new google.maps.LatLng(
                response_value["data"][i]["latitude"],
                response_value["data"][i]["longitude"]
            )
            mapInstance.setCenter(pos[i])
            marker[i] = new google.maps.Marker({
                map: mapInstance,
                position: pos[i]
            })
            infoWindow[i] = new google.maps.InfoWindow({
                    content: `<p>${response_value["data"][i]["place"]}</p>`
            });
            marker[i].addListener("click", function(element){
                for(let j =0; j < marker.length;j++){
                    marker[j].animation = google.maps.Animation.DROP
                }
                mapInstance.setCenter(pos[i])
                var zoom = 0
                var zoomingMap = setInterval(function(){
                    zoom++
                    if (zoom > 14){
                        clearInterval(zoomingMap)
                    }
                    mapInstance.setZoom(zoom)
                },300);
                // mapInstance.zoom = 11
                infoWindow[i].open(mapInstance, marker[i]);
                
            });
        }
        document.getElementById("map").style.animation = "fadeIn 3s forwards 5600ms";
    });
    request.open('GET', '/kubota/map_request', true); // csvのパスを指定
    request.send();
}

function oneCharacterByfadeInAnimation(element,delaySpeed){
    if ($(element).length !== 0 ){
       $(element).children().andSelf().contents().each(function() {
           if (this.nodeType == 3) {
           $(this).replaceWith($(this).text().replace(/(\S)/g, '<span>$1</span>'));
           }
       });
       // 一文字ずつフェードインさせる
       $(element).css({'opacity':1});
       for (var i = 0; i <= $(element).children().size(); i++){
           $(element).children('span:eq('+i+')').css('opacity','0');
       }
       for (var i = 0; i <= $(element).children().size(); i++) {
        //    $(element).children('span:eq('+i+')').delay( delaySpeed * i).animate({'opacity':1},50);
           $(element).children('span:eq('+i+')').css("animation",`fadeIn 1s forwards ${i * delaySpeed}ms`);
       };
   }
}

function kaisekiAnimation(){
    oneCharacterByfadeInAnimation(document.getElementById("kaiseki"),200)
    setTimeout(function(){
        document.getElementById("kaiseki").remove();
        setTimeout(function(){
            document.getElementById("kaiseki_wrapper").innerHTML = "<p id='kaiseki'>解析中・・・</p>"
        },100);
    }, 1400);
}

var appendElement = document.createElement('p')
</script>